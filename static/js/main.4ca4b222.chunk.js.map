{"version":3,"sources":["config/config.js","services/httpService.js","config/endpoints.js","api/dataMock.js","api/local.api.js","components/converter/Converter.jsx","api/converter.api.js","components/history-list/HistoryList.jsx","components/history-tab/HistoryTab.jsx","components/api-alert/ApiAlert.jsx","views/home-page/HomePage.jsx","components/error-handling/ErrorBoundary.jsx","App.js","serviceWorker.js","index.js"],"names":["CONFIG","HOST","API_KEY","HttpService","_getUrl","endpoint","_getHost","config","Error","_resolveHeaders","customHeaders","headers","get","options","axios","method","url","then","response","status","onSuccess","data","catch","error","console","log","this","Accept","ENDPOINTS","CONVERTER","CURRENCIES","COUNTRIES","USAGE","currenciesMock","convertMock","fetchLocalStorage","key","Storage","JSON","parse","localStorage","getItem","Converter","props","formState","setFormState","historyList","setHistoryList","useState","currencies","setCurrencies","isDisabled","setIsDisabled","history","useHistory","useEffect","getAllCurrencies","amount","Promise","resolve","Object","keys","results","map","id","sort","fromCurrency","toCurrency","handleChange","event","target","value","name","className","Form","onSubmit","preventDefault","newScore","values","score","newConversion","today","Date","toJSON","slice","split","reverse","join","before","after","parseFloat","toFixed","localData","setItem","stringify","newData","updateLocalStorage","push","Group","Label","Control","as","onChange","readOnly","element","index","icon","faExchangeAlt","data-config-id","size","color","type","disabled","HistoryList","length","faLongArrowAltRight","Button","variant","onClick","clear","HistoryTab","isHistoryOn","to","faTimes","ApiAlert","expenditure","setExpenditure","reject","onError","Alert","usage","calculateUsage","limit","initialState","HomePage","newLocal","Container","fluid","Row","Col","ErrorBoundary","state","hasError","errorInfo","children","Component","App","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.4ca4b222.chunk.js","sourcesContent":["const CONFIG = {\n    HOST: 'https://free.currconv.com',\n    API_KEY: 'd44b5d43258c64da53fc',\n};\n\nexport default CONFIG;\n","import axios from 'axios';\nimport config from '../config/config'\n\nclass HttpService {\n    constructor() {\n        this.headers = {\n            'Content-Type': 'application/json',\n            Accept: 'application/json'\n        };\n    }\n\n    _getUrl = (endpoint) => {\n        return this._getHost() + endpoint;\n    };\n\n    _getHost = () => {\n        const HOST = config.HOST;\n        if (!HOST) throw new Error('Cannot get host address from config file');\n        return HOST;\n    };\n\n    _resolveHeaders = (customHeaders = {}) => {\n        return { ...this.headers, ...customHeaders };\n    };\n\n    get = options => axios({\n        headers: this._resolveHeaders(options.headers),\n        method: 'GET',\n        url: this._getUrl(options.endpoint),\n    })\n        .then(response => {\n            if (response.status >= 200 && response.status < 300) {\n                options.onSuccess(response.data);\n            } else {\n                throw new Error('Data not loaded', response);\n            }\n\n        })\n        .catch(error => console.log(error))\n\n\n}\n\nexport default HttpService;","const ENDPOINTS = {\n    CONVERTER: '/api/v7/convert',\n    CURRENCIES: '/api/v7/currencies',\n    COUNTRIES: '/api/v7/countries',\n    USAGE: '/others/usage',\n};\n\nexport default ENDPOINTS;","export const currenciesMock =\n{\n    \"results\": {\n        \"ALL\": {\n            \"currencyName\": \"Albanian Lek\",\n            \"currencySymbol\": \"Lek\",\n            \"id\": \"ALL\"\n        },\n        \"XCD\": {\n            \"currencyName\": \"East Caribbean Dollar\",\n            \"currencySymbol\": \"$\",\n            \"id\": \"XCD\"\n        },\n        \"EUR\": {\n            \"currencyName\": \"Euro\",\n            \"currencySymbol\": \"€\",\n            \"id\": \"EUR\"\n        },\n        \"BBD\": {\n            \"currencyName\": \"Barbadian Dollar\",\n            \"currencySymbol\": \"$\",\n            \"id\": \"BBD\"\n        },\n        \"BTN\": {\n            \"currencyName\": \"Bhutanese Ngultrum\",\n            \"id\": \"BTN\"\n        },\n        \"BND\": {\n            \"currencyName\": \"Brunei Dollar\",\n            \"currencySymbol\": \"$\",\n            \"id\": \"BND\"\n        },\n        \"XAF\": {\n            \"currencyName\": \"Central African CFA Franc\",\n            \"id\": \"XAF\"\n        },\n        \"CUP\": {\n            \"currencyName\": \"Cuban Peso\",\n            \"currencySymbol\": \"$\",\n            \"id\": \"CUP\"\n        },\n        \"USD\": {\n            \"currencyName\": \"United States Dollar\",\n            \"currencySymbol\": \"$\",\n            \"id\": \"USD\"\n        },\n        \"FKP\": {\n            \"currencyName\": \"Falkland Islands Pound\",\n            \"currencySymbol\": \"£\",\n            \"id\": \"FKP\"\n        },\n        \"GIP\": {\n            \"currencyName\": \"Gibraltar Pound\",\n            \"currencySymbol\": \"£\",\n            \"id\": \"GIP\"\n        },\n        \"HUF\": {\n            \"currencyName\": \"Hungarian Forint\",\n            \"currencySymbol\": \"Ft\",\n            \"id\": \"HUF\"\n        },\n        \"IRR\": {\n            \"currencyName\": \"Iranian Rial\",\n            \"currencySymbol\": \"﷼\",\n            \"id\": \"IRR\"\n        },\n        \"JMD\": {\n            \"currencyName\": \"Jamaican Dollar\",\n            \"currencySymbol\": \"J$\",\n            \"id\": \"JMD\"\n        },\n        \"AUD\": {\n            \"currencyName\": \"Australian Dollar\",\n            \"currencySymbol\": \"$\",\n            \"id\": \"AUD\"\n        },\n        \"LAK\": {\n            \"currencyName\": \"Lao Kip\",\n            \"currencySymbol\": \"₭\",\n            \"id\": \"LAK\"\n        },\n        \"LYD\": {\n            \"currencyName\": \"Libyan Dinar\",\n            \"id\": \"LYD\"\n        },\n        \"MKD\": {\n            \"currencyName\": \"Macedonian Denar\",\n            \"currencySymbol\": \"ден\",\n            \"id\": \"MKD\"\n        },\n        \"XOF\": {\n            \"currencyName\": \"West African CFA Franc\",\n            \"id\": \"XOF\"\n        },\n        \"NZD\": {\n            \"currencyName\": \"New Zealand Dollar\",\n            \"currencySymbol\": \"$\",\n            \"id\": \"NZD\"\n        },\n        \"OMR\": {\n            \"currencyName\": \"Omani Rial\",\n            \"currencySymbol\": \"﷼\",\n            \"id\": \"OMR\"\n        },\n        \"PGK\": {\n            \"currencyName\": \"Papua New Guinean Kina\",\n            \"id\": \"PGK\"\n        },\n        \"RWF\": {\n            \"currencyName\": \"Rwandan Franc\",\n            \"id\": \"RWF\"\n        },\n        \"WST\": {\n            \"currencyName\": \"Samoan Tala\",\n            \"id\": \"WST\"\n        },\n        \"RSD\": {\n            \"currencyName\": \"Serbian Dinar\",\n            \"currencySymbol\": \"Дин.\",\n            \"id\": \"RSD\"\n        },\n        \"SEK\": {\n            \"currencyName\": \"Swedish Krona\",\n            \"currencySymbol\": \"kr\",\n            \"id\": \"SEK\"\n        },\n        \"TZS\": {\n            \"currencyName\": \"Tanzanian Shilling\",\n            \"currencySymbol\": \"TSh\",\n            \"id\": \"TZS\"\n        },\n        \"AMD\": {\n            \"currencyName\": \"Armenian Dram\",\n            \"id\": \"AMD\"\n        },\n        \"BSD\": {\n            \"currencyName\": \"Bahamian Dollar\",\n            \"currencySymbol\": \"$\",\n            \"id\": \"BSD\"\n        },\n        \"BAM\": {\n            \"currencyName\": \"Bosnia And Herzegovina Konvertibilna Marka\",\n            \"currencySymbol\": \"KM\",\n            \"id\": \"BAM\"\n        },\n        \"CVE\": {\n            \"currencyName\": \"Cape Verdean Escudo\",\n            \"id\": \"CVE\"\n        },\n        \"CNY\": {\n            \"currencyName\": \"Chinese Yuan\",\n            \"currencySymbol\": \"¥\",\n            \"id\": \"CNY\"\n        },\n        \"CRC\": {\n            \"currencyName\": \"Costa Rican Colon\",\n            \"currencySymbol\": \"₡\",\n            \"id\": \"CRC\"\n        },\n        \"CZK\": {\n            \"currencyName\": \"Czech Koruna\",\n            \"currencySymbol\": \"Kč\",\n            \"id\": \"CZK\"\n        },\n        \"ERN\": {\n            \"currencyName\": \"Eritrean Nakfa\",\n            \"id\": \"ERN\"\n        },\n        \"GEL\": {\n            \"currencyName\": \"Georgian Lari\",\n            \"id\": \"GEL\"\n        },\n        \"HTG\": {\n            \"currencyName\": \"Haitian Gourde\",\n            \"id\": \"HTG\"\n        },\n        \"INR\": {\n            \"currencyName\": \"Indian Rupee\",\n            \"currencySymbol\": \"₹\",\n            \"id\": \"INR\"\n        },\n        \"JOD\": {\n            \"currencyName\": \"Jordanian Dinar\",\n            \"id\": \"JOD\"\n        },\n        \"KRW\": {\n            \"currencyName\": \"South Korean Won\",\n            \"currencySymbol\": \"₩\",\n            \"id\": \"KRW\"\n        },\n        \"LBP\": {\n            \"currencyName\": \"Lebanese Lira\",\n            \"currencySymbol\": \"£\",\n            \"id\": \"LBP\"\n        },\n        \"MWK\": {\n            \"currencyName\": \"Malawian Kwacha\",\n            \"id\": \"MWK\"\n        },\n        \"MRO\": {\n            \"currencyName\": \"Mauritanian Ouguiya\",\n            \"id\": \"MRO\"\n        },\n        \"MZN\": {\n            \"currencyName\": \"Mozambican Metical\",\n            \"id\": \"MZN\"\n        },\n        \"ANG\": {\n            \"currencyName\": \"Netherlands Antillean Gulden\",\n            \"currencySymbol\": \"ƒ\",\n            \"id\": \"ANG\"\n        },\n        \"PEN\": {\n            \"currencyName\": \"Peruvian Nuevo Sol\",\n            \"currencySymbol\": \"S/.\",\n            \"id\": \"PEN\"\n        },\n        \"QAR\": {\n            \"currencyName\": \"Qatari Riyal\",\n            \"currencySymbol\": \"﷼\",\n            \"id\": \"QAR\"\n        },\n        \"STD\": {\n            \"currencyName\": \"Sao Tome And Principe Dobra\",\n            \"id\": \"STD\"\n        },\n        \"SLL\": {\n            \"currencyName\": \"Sierra Leonean Leone\",\n            \"id\": \"SLL\"\n        },\n        \"SOS\": {\n            \"currencyName\": \"Somali Shilling\",\n            \"currencySymbol\": \"S\",\n            \"id\": \"SOS\"\n        },\n        \"SDG\": {\n            \"currencyName\": \"Sudanese Pound\",\n            \"id\": \"SDG\"\n        },\n        \"SYP\": {\n            \"currencyName\": \"Syrian Pound\",\n            \"currencySymbol\": \"£\",\n            \"id\": \"SYP\"\n        },\n        \"AOA\": {\n            \"currencyName\": \"Angolan Kwanza\",\n            \"id\": \"AOA\"\n        },\n        \"AWG\": {\n            \"currencyName\": \"Aruban Florin\",\n            \"currencySymbol\": \"ƒ\",\n            \"id\": \"AWG\"\n        },\n        \"BHD\": {\n            \"currencyName\": \"Bahraini Dinar\",\n            \"id\": \"BHD\"\n        },\n        \"BZD\": {\n            \"currencyName\": \"Belize Dollar\",\n            \"currencySymbol\": \"BZ$\",\n            \"id\": \"BZD\"\n        },\n        \"BWP\": {\n            \"currencyName\": \"Botswana Pula\",\n            \"currencySymbol\": \"P\",\n            \"id\": \"BWP\"\n        },\n        \"BIF\": {\n            \"currencyName\": \"Burundi Franc\",\n            \"id\": \"BIF\"\n        },\n        \"KYD\": {\n            \"currencyName\": \"Cayman Islands Dollar\",\n            \"currencySymbol\": \"$\",\n            \"id\": \"KYD\"\n        },\n        \"COP\": {\n            \"currencyName\": \"Colombian Peso\",\n            \"currencySymbol\": \"$\",\n            \"id\": \"COP\"\n        },\n        \"DKK\": {\n            \"currencyName\": \"Danish Krone\",\n            \"currencySymbol\": \"kr\",\n            \"id\": \"DKK\"\n        },\n        \"GTQ\": {\n            \"currencyName\": \"Guatemalan Quetzal\",\n            \"currencySymbol\": \"Q\",\n            \"id\": \"GTQ\"\n        },\n        \"HNL\": {\n            \"currencyName\": \"Honduran Lempira\",\n            \"currencySymbol\": \"L\",\n            \"id\": \"HNL\"\n        },\n        \"IDR\": {\n            \"currencyName\": \"Indonesian Rupiah\",\n            \"currencySymbol\": \"Rp\",\n            \"id\": \"IDR\"\n        },\n        \"ILS\": {\n            \"currencyName\": \"Israeli New Sheqel\",\n            \"currencySymbol\": \"₪\",\n            \"id\": \"ILS\"\n        },\n        \"KZT\": {\n            \"currencyName\": \"Kazakhstani Tenge\",\n            \"currencySymbol\": \"лв\",\n            \"id\": \"KZT\"\n        },\n        \"KWD\": {\n            \"currencyName\": \"Kuwaiti Dinar\",\n            \"id\": \"KWD\"\n        },\n        \"LSL\": {\n            \"currencyName\": \"Lesotho Loti\",\n            \"id\": \"LSL\"\n        },\n        \"MYR\": {\n            \"currencyName\": \"Malaysian Ringgit\",\n            \"currencySymbol\": \"RM\",\n            \"id\": \"MYR\"\n        },\n        \"MUR\": {\n            \"currencyName\": \"Mauritian Rupee\",\n            \"currencySymbol\": \"₨\",\n            \"id\": \"MUR\"\n        },\n        \"MNT\": {\n            \"currencyName\": \"Mongolian Tugrik\",\n            \"currencySymbol\": \"₮\",\n            \"id\": \"MNT\"\n        },\n        \"MMK\": {\n            \"currencyName\": \"Myanma Kyat\",\n            \"id\": \"MMK\"\n        },\n        \"NGN\": {\n            \"currencyName\": \"Nigerian Naira\",\n            \"currencySymbol\": \"₦\",\n            \"id\": \"NGN\"\n        },\n        \"PAB\": {\n            \"currencyName\": \"Panamanian Balboa\",\n            \"currencySymbol\": \"B/.\",\n            \"id\": \"PAB\"\n        },\n        \"PHP\": {\n            \"currencyName\": \"Philippine Peso\",\n            \"currencySymbol\": \"₱\",\n            \"id\": \"PHP\"\n        },\n        \"RON\": {\n            \"currencyName\": \"Romanian Leu\",\n            \"currencySymbol\": \"lei\",\n            \"id\": \"RON\"\n        },\n        \"SAR\": {\n            \"currencyName\": \"Saudi Riyal\",\n            \"currencySymbol\": \"﷼\",\n            \"id\": \"SAR\"\n        },\n        \"SGD\": {\n            \"currencyName\": \"Singapore Dollar\",\n            \"currencySymbol\": \"$\",\n            \"id\": \"SGD\"\n        },\n        \"ZAR\": {\n            \"currencyName\": \"South African Rand\",\n            \"currencySymbol\": \"R\",\n            \"id\": \"ZAR\"\n        },\n        \"SRD\": {\n            \"currencyName\": \"Surinamese Dollar\",\n            \"currencySymbol\": \"$\",\n            \"id\": \"SRD\"\n        },\n        \"TWD\": {\n            \"currencyName\": \"New Taiwan Dollar\",\n            \"currencySymbol\": \"NT$\",\n            \"id\": \"TWD\"\n        },\n        \"TOP\": {\n            \"currencyName\": \"Paanga\",\n            \"id\": \"TOP\"\n        },\n        \"VEF\": {\n            \"currencyName\": \"Venezuelan Bolivar\",\n            \"id\": \"VEF\"\n        },\n        \"DZD\": {\n            \"currencyName\": \"Algerian Dinar\",\n            \"id\": \"DZD\"\n        },\n        \"ARS\": {\n            \"currencyName\": \"Argentine Peso\",\n            \"currencySymbol\": \"$\",\n            \"id\": \"ARS\"\n        },\n        \"AZN\": {\n            \"currencyName\": \"Azerbaijani Manat\",\n            \"currencySymbol\": \"ман\",\n            \"id\": \"AZN\"\n        },\n        \"BYR\": {\n            \"currencyName\": \"Belarusian Ruble\",\n            \"currencySymbol\": \"p.\",\n            \"id\": \"BYR\"\n        },\n        \"BOB\": {\n            \"currencyName\": \"Bolivian Boliviano\",\n            \"currencySymbol\": \"$b\",\n            \"id\": \"BOB\"\n        },\n        \"BGN\": {\n            \"currencyName\": \"Bulgarian Lev\",\n            \"currencySymbol\": \"лв\",\n            \"id\": \"BGN\"\n        },\n        \"CAD\": {\n            \"currencyName\": \"Canadian Dollar\",\n            \"currencySymbol\": \"$\",\n            \"id\": \"CAD\"\n        },\n        \"CLP\": {\n            \"currencyName\": \"Chilean Peso\",\n            \"currencySymbol\": \"$\",\n            \"id\": \"CLP\"\n        },\n        \"CDF\": {\n            \"currencyName\": \"Congolese Franc\",\n            \"id\": \"CDF\"\n        },\n        \"DOP\": {\n            \"currencyName\": \"Dominican Peso\",\n            \"currencySymbol\": \"RD$\",\n            \"id\": \"DOP\"\n        },\n        \"FJD\": {\n            \"currencyName\": \"Fijian Dollar\",\n            \"currencySymbol\": \"$\",\n            \"id\": \"FJD\"\n        },\n        \"GMD\": {\n            \"currencyName\": \"Gambian Dalasi\",\n            \"id\": \"GMD\"\n        },\n        \"GYD\": {\n            \"currencyName\": \"Guyanese Dollar\",\n            \"currencySymbol\": \"$\",\n            \"id\": \"GYD\"\n        },\n        \"ISK\": {\n            \"currencyName\": \"Icelandic Króna\",\n            \"currencySymbol\": \"kr\",\n            \"id\": \"ISK\"\n        },\n        \"IQD\": {\n            \"currencyName\": \"Iraqi Dinar\",\n            \"id\": \"IQD\"\n        },\n        \"JPY\": {\n            \"currencyName\": \"Japanese Yen\",\n            \"currencySymbol\": \"¥\",\n            \"id\": \"JPY\"\n        },\n        \"KPW\": {\n            \"currencyName\": \"North Korean Won\",\n            \"currencySymbol\": \"₩\",\n            \"id\": \"KPW\"\n        },\n        \"LVL\": {\n            \"currencyName\": \"Latvian Lats\",\n            \"currencySymbol\": \"Ls\",\n            \"id\": \"LVL\"\n        },\n        \"CHF\": {\n            \"currencyName\": \"Swiss Franc\",\n            \"currencySymbol\": \"Fr.\",\n            \"id\": \"CHF\"\n        },\n        \"MGA\": {\n            \"currencyName\": \"Malagasy Ariary\",\n            \"id\": \"MGA\"\n        },\n        \"MDL\": {\n            \"currencyName\": \"Moldovan Leu\",\n            \"id\": \"MDL\"\n        },\n        \"MAD\": {\n            \"currencyName\": \"Moroccan Dirham\",\n            \"id\": \"MAD\"\n        },\n        \"NPR\": {\n            \"currencyName\": \"Nepalese Rupee\",\n            \"currencySymbol\": \"₨\",\n            \"id\": \"NPR\"\n        },\n        \"NIO\": {\n            \"currencyName\": \"Nicaraguan Cordoba\",\n            \"currencySymbol\": \"C$\",\n            \"id\": \"NIO\"\n        },\n        \"PKR\": {\n            \"currencyName\": \"Pakistani Rupee\",\n            \"currencySymbol\": \"₨\",\n            \"id\": \"PKR\"\n        },\n        \"PYG\": {\n            \"currencyName\": \"Paraguayan Guarani\",\n            \"currencySymbol\": \"Gs\",\n            \"id\": \"PYG\"\n        },\n        \"SHP\": {\n            \"currencyName\": \"Saint Helena Pound\",\n            \"currencySymbol\": \"£\",\n            \"id\": \"SHP\"\n        },\n        \"SCR\": {\n            \"currencyName\": \"Seychellois Rupee\",\n            \"currencySymbol\": \"₨\",\n            \"id\": \"SCR\"\n        },\n        \"SBD\": {\n            \"currencyName\": \"Solomon Islands Dollar\",\n            \"currencySymbol\": \"$\",\n            \"id\": \"SBD\"\n        },\n        \"LKR\": {\n            \"currencyName\": \"Sri Lankan Rupee\",\n            \"currencySymbol\": \"₨\",\n            \"id\": \"LKR\"\n        },\n        \"THB\": {\n            \"currencyName\": \"Thai Baht\",\n            \"currencySymbol\": \"฿\",\n            \"id\": \"THB\"\n        },\n        \"TRY\": {\n            \"currencyName\": \"Turkish New Lira\",\n            \"id\": \"TRY\"\n        },\n        \"AED\": {\n            \"currencyName\": \"UAE Dirham\",\n            \"id\": \"AED\"\n        },\n        \"VUV\": {\n            \"currencyName\": \"Vanuatu Vatu\",\n            \"id\": \"VUV\"\n        },\n        \"YER\": {\n            \"currencyName\": \"Yemeni Rial\",\n            \"currencySymbol\": \"﷼\",\n            \"id\": \"YER\"\n        },\n        \"AFN\": {\n            \"currencyName\": \"Afghan Afghani\",\n            \"currencySymbol\": \"؋\",\n            \"id\": \"AFN\"\n        },\n        \"BDT\": {\n            \"currencyName\": \"Bangladeshi Taka\",\n            \"id\": \"BDT\"\n        },\n        \"BRL\": {\n            \"currencyName\": \"Brazilian Real\",\n            \"currencySymbol\": \"R$\",\n            \"id\": \"BRL\"\n        },\n        \"KHR\": {\n            \"currencyName\": \"Cambodian Riel\",\n            \"currencySymbol\": \"៛\",\n            \"id\": \"KHR\"\n        },\n        \"KMF\": {\n            \"currencyName\": \"Comorian Franc\",\n            \"id\": \"KMF\"\n        },\n        \"HRK\": {\n            \"currencyName\": \"Croatian Kuna\",\n            \"currencySymbol\": \"kn\",\n            \"id\": \"HRK\"\n        },\n        \"DJF\": {\n            \"currencyName\": \"Djiboutian Franc\",\n            \"id\": \"DJF\"\n        },\n        \"EGP\": {\n            \"currencyName\": \"Egyptian Pound\",\n            \"currencySymbol\": \"£\",\n            \"id\": \"EGP\"\n        },\n        \"ETB\": {\n            \"currencyName\": \"Ethiopian Birr\",\n            \"id\": \"ETB\"\n        },\n        \"XPF\": {\n            \"currencyName\": \"CFP Franc\",\n            \"id\": \"XPF\"\n        },\n        \"GHS\": {\n            \"currencyName\": \"Ghanaian Cedi\",\n            \"id\": \"GHS\"\n        },\n        \"GNF\": {\n            \"currencyName\": \"Guinean Franc\",\n            \"id\": \"GNF\"\n        },\n        \"HKD\": {\n            \"currencyName\": \"Hong Kong Dollar\",\n            \"currencySymbol\": \"$\",\n            \"id\": \"HKD\"\n        },\n        \"XDR\": {\n            \"currencyName\": \"Special Drawing Rights\",\n            \"id\": \"XDR\"\n        },\n        \"KES\": {\n            \"currencyName\": \"Kenyan Shilling\",\n            \"currencySymbol\": \"KSh\",\n            \"id\": \"KES\"\n        },\n        \"KGS\": {\n            \"currencyName\": \"Kyrgyzstani Som\",\n            \"currencySymbol\": \"лв\",\n            \"id\": \"KGS\"\n        },\n        \"LRD\": {\n            \"currencyName\": \"Liberian Dollar\",\n            \"currencySymbol\": \"$\",\n            \"id\": \"LRD\"\n        },\n        \"MOP\": {\n            \"currencyName\": \"Macanese Pataca\",\n            \"id\": \"MOP\"\n        },\n        \"MVR\": {\n            \"currencyName\": \"Maldivian Rufiyaa\",\n            \"id\": \"MVR\"\n        },\n        \"MXN\": {\n            \"currencyName\": \"Mexican Peso\",\n            \"currencySymbol\": \"$\",\n            \"id\": \"MXN\"\n        },\n        \"NAD\": {\n            \"currencyName\": \"Namibian Dollar\",\n            \"currencySymbol\": \"$\",\n            \"id\": \"NAD\"\n        },\n        \"NOK\": {\n            \"currencyName\": \"Norwegian Krone\",\n            \"currencySymbol\": \"kr\",\n            \"id\": \"NOK\"\n        },\n        \"PLN\": {\n            \"currencyName\": \"Polish Zloty\",\n            \"currencySymbol\": \"zł\",\n            \"id\": \"PLN\"\n        },\n        \"RUB\": {\n            \"currencyName\": \"Russian Ruble\",\n            \"currencySymbol\": \"руб\",\n            \"id\": \"RUB\"\n        },\n        \"SZL\": {\n            \"currencyName\": \"Swazi Lilangeni\",\n            \"id\": \"SZL\"\n        },\n        \"TJS\": {\n            \"currencyName\": \"Tajikistani Somoni\",\n            \"id\": \"TJS\"\n        },\n        \"TTD\": {\n            \"currencyName\": \"Trinidad and Tobago Dollar\",\n            \"currencySymbol\": \"TT$\",\n            \"id\": \"TTD\"\n        },\n        \"UGX\": {\n            \"currencyName\": \"Ugandan Shilling\",\n            \"currencySymbol\": \"USh\",\n            \"id\": \"UGX\"\n        },\n        \"UYU\": {\n            \"currencyName\": \"Uruguayan Peso\",\n            \"currencySymbol\": \"$U\",\n            \"id\": \"UYU\"\n        },\n        \"VND\": {\n            \"currencyName\": \"Vietnamese Dong\",\n            \"currencySymbol\": \"₫\",\n            \"id\": \"VND\"\n        },\n        \"TND\": {\n            \"currencyName\": \"Tunisian Dinar\",\n            \"id\": \"TND\"\n        },\n        \"UAH\": {\n            \"currencyName\": \"Ukrainian Hryvnia\",\n            \"currencySymbol\": \"₴\",\n            \"id\": \"UAH\"\n        },\n        \"UZS\": {\n            \"currencyName\": \"Uzbekistani Som\",\n            \"currencySymbol\": \"лв\",\n            \"id\": \"UZS\"\n        },\n        \"TMT\": {\n            \"currencyName\": \"Turkmenistan Manat\",\n            \"id\": \"TMT\"\n        },\n        \"GBP\": {\n            \"currencyName\": \"British Pound\",\n            \"currencySymbol\": \"£\",\n            \"id\": \"GBP\"\n        },\n        \"ZMW\": {\n            \"currencyName\": \"Zambian Kwacha\",\n            \"id\": \"ZMW\"\n        },\n        \"BTC\": {\n            \"currencyName\": \"Bitcoin\",\n            \"currencySymbol\": \"BTC\",\n            \"id\": \"BTC\"\n        },\n        \"BYN\": {\n            \"currencyName\": \"New Belarusian Ruble\",\n            \"currencySymbol\": \"p.\",\n            \"id\": \"BYN\"\n        },\n        \"BMD\": {\n            \"currencyName\": \"Bermudan Dollar\",\n            \"id\": \"BMD\"\n        },\n        \"GGP\": {\n            \"currencyName\": \"Guernsey Pound\",\n            \"id\": \"GGP\"\n        },\n        \"CLF\": {\n            \"currencyName\": \"Chilean Unit Of Account\",\n            \"id\": \"CLF\"\n        },\n        \"CUC\": {\n            \"currencyName\": \"Cuban Convertible Peso\",\n            \"id\": \"CUC\"\n        },\n        \"IMP\": {\n            \"currencyName\": \"Manx pound\",\n            \"id\": \"IMP\"\n        },\n        \"JEP\": {\n            \"currencyName\": \"Jersey Pound\",\n            \"id\": \"JEP\"\n        },\n        \"SVC\": {\n            \"currencyName\": \"Salvadoran Colón\",\n            \"id\": \"SVC\"\n        },\n        \"ZMK\": {\n            \"currencyName\": \"Old Zambian Kwacha\",\n            \"id\": \"ZMK\"\n        },\n        \"XAG\": {\n            \"currencyName\": \"Silver (troy ounce)\",\n            \"id\": \"XAG\"\n        },\n        \"ZWL\": {\n            \"currencyName\": \"Zimbabwean Dollar\",\n            \"id\": \"ZWL\"\n        }\n    }\n}\n\nexport const convertMock = {\n    \"USD_PHP\": 48.607497\n}","export const fetchLocalStorage = (key) => {\n    let localData = null;\n    if (typeof (Storage) !== \"undefined\") {\n        localData = JSON.parse(localStorage.getItem(key));\n    } else {\n        throw new Error('No Web Storage support..');\n    }\n    return localData;\n}\n\nexport const updateLocalStorage = (key, value) => {\n    let localData = fetchLocalStorage(key);\n    if (localData === null) {\n        localStorage.setItem(key, JSON.stringify([value]));\n    } else {\n        let newData = [\n            { ...value },\n            ...localData,\n        ]\n        localStorage.setItem(key, JSON.stringify(newData));\n    }\n}\n\nexport const clearLocalStorage = () => {\n    localStorage.clear();\n}","import React, { useState, useEffect } from \"react\";\nimport \"./converter.styles.scss\";\n// import { Form, Field } from \"react-final-form\";\nimport { Form } from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faExchangeAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n  fetchCurrenciesMock,\n  fetchConvertMock,\n  fetchConversionData,\n  fetchAllCurrencies,\n  getUsage\n} from \"../../api/converter.api\";\nimport {\n  fetchLocalStorage,\n  updateLocalStorage,\n  clearLocalStorage\n} from \"../../api/local.api\";\n\nconst Converter = props => {\n  const { formState, setFormState, historyList, setHistoryList } = props;\n  const [currencies, setCurrencies] = useState([]);\n  const [isDisabled, setIsDisabled] = useState(true);\n\n  let history = useHistory();\n\n  useEffect(() => {\n    getAllCurrencies();\n    // eslint-disable-next-line\n  }, []);\n\n  useEffect(()=>{\n    setIsDisabled(true);\n    if(formState.amount > 0) {\n      setIsDisabled(false);\n    }\n  },[formState.amount])\n\n  const getAllCurrencies = () => {\n    fetchCurrenciesMock()\n      // fetchAllCurrencies()\n      .then(data => {\n        const currencies = Object.keys(data.results)\n          .map(key => data.results[key].id)\n          .sort();\n        setCurrencies(currencies);\n        return currencies;\n      })\n      .then(data => {\n        setFormState({\n          ...formState,\n          fromCurrency: data[0],\n          toCurrency: data[0]\n        });\n      });\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    fetchConvertMock()\n      // fetchConversionData(formState.fromCurrency, formState.toCurrency)\n      .then(data => {\n        let eRate = Object.values(data)[0];\n        let newScore = eRate * formState.amount;\n        setFormState({\n          ...formState,\n          score: newScore\n        });\n        return newScore;\n      })\n      .then(newScore => {\n        let newConversion = {\n          today: new Date()\n            .toJSON()\n            .slice(0, 10)\n            .split(\"-\")\n            .reverse()\n            .join(\".\"),\n          before: formState.amount + \" \" + formState.fromCurrency,\n          after: parseFloat(newScore).toFixed(2) + \" \" + formState.toCurrency\n        };\n        setHistoryList([newConversion, ...historyList]);\n        updateLocalStorage(\"history\", newConversion);\n      })\n      .then(() => {\n        history.push(\"history\");\n      });\n  };\n\n  const handleChange = event => {\n    const { value, name } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value\n    });\n  };\n\n  return (\n    <div className='converter-main'>\n      <Form onSubmit={handleSubmit} className='converter-form'>\n        <h2>Konwerter walut</h2>\n        <Form.Group>\n          <Form.Label className='form-input-label'>\n            <div>Wpisz kwotę</div>\n            <div>{formState.fromCurrency}</div>\n          </Form.Label>\n          <Form.Control\n            as='input'\n            name='amount'\n            value={formState.amount}\n            onChange={handleChange}\n          />\n        </Form.Group>\n        <Form.Group>\n          <Form.Label className='form-input-label'>\n            <div>Wynik</div>\n            <div>{formState.toCurrency}</div>\n          </Form.Label>\n          <Form.Control readOnly value={formState.score} />\n        </Form.Group>\n        <Form.Group>\n          <div className='converter-currency-select-group'>\n            <Form.Control\n              className='conv-select'\n              as='select'\n              name='fromCurrency'\n              value={formState.fromCurrency}\n              onChange={handleChange}\n            >\n              {currencies.map((element, index) => (\n                <option key={index} value={element} name={element}>\n                  {element}\n                </option>\n              ))}\n            </Form.Control>\n            <FontAwesomeIcon\n              className='conv-arrows'\n              icon={faExchangeAlt}\n              data-config-id='icon'\n              size='1x'\n              color='#000'\n            />\n            <Form.Control\n              className='conv-select'\n              as='select'\n              name='toCurrency'\n              value={formState.toCurrency}\n              onChange={handleChange}\n            >\n              {currencies.map((element, index) => (\n                <option key={index} value={element} name={element}>\n                  {element}\n                </option>\n              ))}\n            </Form.Control>\n          </div>\n        </Form.Group>\n        <button className={`converter-btn ${isDisabled ? 'disabled-btn' : ''}`} type='submit' disabled={isDisabled}>\n          KONWERTUJ\n        </button>\n      </Form>\n    </div>\n  );\n};\n\nexport default Converter;\n","import HttpService from '../services/httpService';\nimport ENDPOINTS from '../config/endpoints';\nimport CONFIG from '../config/config';\nimport { convertMock, currenciesMock } from './dataMock'\n\nexport const fetchConversionData = (fromCurrency, toCurrency) => {\n    return new Promise((resolve, reject) => {\n        const httpClient = new HttpService();\n        httpClient.get({\n            endpoint: `${ENDPOINTS.CONVERTER}?q=${fromCurrency}_${toCurrency}&compact=ultra&apiKey=${CONFIG.API_KEY}`,\n            onSuccess: data => resolve(data),\n            onError: error => reject(error)\n        })\n    })\n}\n\nexport const fetchAllCurrencies = () => {\n    return new Promise((resolve, reject) => {\n        const httpClient = new HttpService();\n        httpClient.get({\n            endpoint: `${ENDPOINTS.CURRENCIES}?apiKey=${CONFIG.API_KEY}`,\n            onSuccess: data => resolve(data),\n            onError: error => reject(error)\n        })\n    })\n}\n\nexport const fetchExpenditure = () => {\n    return new Promise((resolve, reject) => {\n        const httpClient = new HttpService();\n        httpClient.get({\n            endpoint: `${ENDPOINTS.USAGE}?apiKey=${CONFIG.API_KEY}`,\n            onSuccess: data => resolve(data),\n            onError: error => reject(error)\n        })\n    })\n}\n\n\nexport const fetchConvertMock = () => {\n    return Promise.resolve(convertMock);\n}\n\nexport const fetchCurrenciesMock = () => {\n    return Promise.resolve(currenciesMock);\n}","import React from \"react\";\nimport \"./history-list.styles.scss\";\nimport { Button } from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLongArrowAltRight } from \"@fortawesome/free-solid-svg-icons\";\nimport { clearLocalStorage } from \"../../api/local.api\";\n\nconst HistoryList = ({ historyList, setHistoryList }) => {\n  const handleClick = () => {\n    console.log(\"History cleared\");\n    clearLocalStorage();\n    setHistoryList([]);\n  };\n\n  return (\n    <div className='history-list-main'>\n      <div className='flex-container'>\n        <div className='flex-header'>\n          <div className='flex-hcell'>Data</div>\n          <div className='flex-hcell'>Przed konwersją</div>\n          <div className='flex-hcell'></div>\n          <div className='flex-hcell'>Po konwersji</div>\n        </div>\n        <div className='flex-overflow'>\n          {historyList.length !== 0 ? (\n            historyList.map((element, index) => (\n              <div key={index} className='flex-trow'>\n                <div className='flex-tcell'>{element.today}</div>\n                <div className='flex-tcell'>{element.before}</div>\n                <div className='flex-tcell'>\n                  <FontAwesomeIcon\n                    className=''\n                    icon={faLongArrowAltRight}\n                    data-config-id='icon'\n                    size='1x'\n                    color='#fff'\n                  />\n                </div>\n                <div className='flex-tcell'>{element.after}</div>\n              </div>\n            ))\n          ) : (\n            <div className='flex-empty'>\n              Brak historii konwersji walut\n            </div>\n          )}\n        </div>\n      </div>\n      <Button\n        variant='link'\n        className='history-list-clearbtn'\n        onClick={handleClick}\n      >\n        Wyczyść historię\n      </Button>\n    </div>\n  );\n};\n\nexport default HistoryList;\n","import React from \"react\";\nimport \"./history-tab.styles.scss\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nconst HistoryTab = ({ isHistoryOn = false, ...otherProps }) => {\n  return (\n    <div className='history-tab-main'>\n      {isHistoryOn && (\n        <Link to={`/${isHistoryOn ? \"\" : \"history\"}`} className='history-tab-link'>\n          <FontAwesomeIcon\n            className='conv-arrows'\n            icon={faTimes}\n            data-config-id='icon'\n            size='1x'\n            color='#fff'\n          />\n        </Link>\n      )}\n      <Link to={`/${isHistoryOn ? \"\" : \"history\"}`}>\n        <span className='rotate'>Historia</span>\n      </Link>\n    </div>\n  );\n};\n\nexport default HistoryTab;\n","import React, { useEffect, useState } from \"react\";\nimport { Alert } from \"react-bootstrap\";\nimport { fetchExpenditure } from \"../../api/converter.api\";\n\nconst ApiAlert = ({formState, ...otherProps}) => {\n  const [expenditure, setExpenditure] = useState(0);\n\n  useEffect(() => {\n    fetchExpenditure().then(data => {\n      setExpenditure(data);\n    });\n    // eslint-disable-next-line\n  }, [formState.score]);\n\n  return (\n    <Alert\n      variant={`${expenditure.usage > 80 ? \"danger\" : \"primary\"}`}\n      className='home-usage-alert'\n    >\n      Free API version. 100 usages per hour.{\" \"}\n      {expenditure && <span>{calculateUsage(expenditure.usage)} left.</span>}\n    </Alert>\n  );\n};\n\nexport default ApiAlert;\n\nconst calculateUsage = (usage, limit = 100) => {\n  return limit - usage <= 0 ? 0 : limit - usage;\n};\n","import React, { useState, useEffect } from \"react\";\nimport \"./home-page.styles.scss\";\nimport { Container, Row, Col, Modal, Alert } from \"react-bootstrap\";\nimport Converter from \"../../components/converter/Converter\";\nimport HistoryList from \"../../components/history-list/HistoryList\";\nimport HistoryTab from \"../../components/history-tab/HistoryTab\";\nimport { fetchLocalStorage } from \"../../api/local.api\";\nimport ApiAlert from \"../../components/api-alert/ApiAlert\";\n\nconst initialState = {\n  today: new Date().toJSON().slice(0, 10).split(\"-\").reverse().join(\".\"),\n  fromCurrency: \"\",\n  toCurrency: \"\",\n  amount: 0,\n  score: 0\n};\n\nconst HomePage = ({ isHistoryOn = false, ...otherProps }) => {\n  const [formState, setFormState] = useState(initialState);\n  const [historyList, setHistoryList] = useState(() => {\n    let newLocal = fetchLocalStorage(\"history\");\n    return newLocal ? newLocal : [];\n  });\n\n  return (\n    <>\n      <Container fluid className='home-page-container'>\n        <Row>\n          <Col>\n            <div className='home-page-main'>\n              <Converter\n                isHistoryOn={isHistoryOn}\n                formState={formState}\n                setFormState={setFormState}\n                historyList={historyList}\n                setHistoryList={setHistoryList}\n              />\n              {isHistoryOn && (\n                <HistoryList\n                  historyList={historyList}\n                  setHistoryList={setHistoryList}\n                />\n              )}\n              <HistoryTab isHistoryOn={isHistoryOn} />\n            </div>\n          </Col>\n        </Row>\n        <ApiAlert formState={formState}/>\n      </Container>\n    </>\n  );\n};\n\nexport default HomePage;\n","import React, { Component } from \"react\";\n\nexport default class ErrorBoundary extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError(error) {\n    return { hasError: true };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    // Możesz także zalogować błąd do zewnętrznego serwisu raportowania błędów\n    // logErrorToMyService(error, errorInfo);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      // TODO:\n      return <h1>Something went wrong.</h1>;\n    }\n\n    return this.props.children;\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport HomePage from './views/home-page/HomePage';\nimport { Switch, Route } from 'react-router-dom';\nimport ErrorBoundary from './components/error-handling/ErrorBoundary';\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <ErrorBoundary>\n        <Switch>\n          <Route exact path={['/', '/currency-converter']}>\n            <HomePage isHistoryOn={false} />\n          </Route>\n          <Route path='/history'>\n            <HomePage isHistoryOn={true} />\n          </Route>\n        </Switch>\n      </ErrorBoundary>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}